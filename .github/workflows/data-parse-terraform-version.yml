# Find Terraform Version from the versions.tf file
name: "[Data - Parse] Terraform Version"
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      terraform_directory:
        type: string
        description: "Directory where terraform will be run from. Looks for versions.tf file in this path."
        required: true
      terraform_versions_file:
        type: string
        description: "Name of file that contains the required_version config is stored. (Default `./versions.tf`)"
        default: "./versions.tf"
      simple_file:
        type: string
        description: "If 'true', change the parsing to presume terraform_versions_file is a plain text file that contains only a semver string."
        default: "false"

    outputs:
      version:
        description: 'Discovered terraform version range. This may be an exact number (like 1.5.5) or a semver range (like >= 1.0).'
        value: ${{ jobs.discover_version_semver_range.outputs.version }}

permissions:
  contents: read
  security-events: none
  pull-requests: none
  actions: none
  checks: none
  deployments: none
  issues: none
  packages: none
  repository-projects: none
  statuses: none

defaults:
  run:
    shell: bash


jobs:


  find_version:
    name: "Find version [${{ inputs.terraform_versions_file }}]"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version}}
    steps:
      - id: version
        name: Get version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@v2.8.0-goversion.0
        with:
          terraform_directory: ${{inputs.terraform_directory}}
          terraform_versions_file: ${{inputs.terraform_versions_file}}
          simple_file: ${{inputs.simple_file}}
      - name: "VERSION: [${{steps.version.outputs.version}}]"
        run: echo "VERSION=${{steps.version.outputs.version}}"
