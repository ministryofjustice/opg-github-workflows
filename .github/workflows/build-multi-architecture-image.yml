name: "[Build - Docker] Build Multi Architecture Image"

on:
  workflow_call:
    inputs:
      image_name:
        type: string
        description: "Name of built image"
        required: true
      image_tag:
        type: string
        description: "Tag of built image"
        default: "latest"
        required: false
      artifact_name:
        type: string
        description: "Name for uploaded artifact of image (this must be unique in the case of bulding more than one multi arch image)"
        default: "multi-arch-image"
        required: false
      artifact_directory:
        type: string
        description: "Directory to store built images and build cache"
        default: "/tmp/images"
        required: false
      build_options:
        type: string
        description: "A list of docker build options"
        required: false
      build_path:
        type: string
        description: "Build path for docker context"
        default: "."
        required: false
      cli_commands:
        type: string
        description: "Any cli commands that might need to be run before a build such as make targets"
        required: false
      job_name:
        type: string
        description: "Name of build image job for checking status against"
        default: "Build Multi Architecture Image"
        required: false

defaults:
  run:
    shell: bash

jobs:
  build_single_images:
    strategy:
      fail-fast: true
      matrix:
        include:
          - actions_runner: ubuntu-latest
            tag: AMD64
          - actions_runner: ubuntu-24.04-arm
            tag: ARM64

    name: "${{ inputs.job_name }} ${{ matrix.tag }}"
    runs-on: ${{ matrix.actions_runner }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Build Image & Save Cache
        run: |
          mkdir -p ${{ inputs.artifact_directory }}/cache/${{ inputs.artifact_name }}-${{ matrix.tag }}
          ${{ inputs.cli_commands }}
          docker buildx build -t ${{ inputs.image_name }}:${{ matrix.tag }} \
            --cache-to type=local,dest=${{ inputs.artifact_directory }}/cache/${{ inputs.artifact_name }}-${{ matrix.tag }},mode=max \
            ${{ inputs.build_options }} \
            ${{ inputs.build_path }}

      - name: Archive Cache
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: cache-${{ inputs.artifact_name }}-${{ matrix.tag }}
          path: ${{ inputs.artifact_directory }}/cache/${{ inputs.artifact_name }}-${{ matrix.tag }}

  build_multi_arch_image:
    name: ${{ inputs.job_name }}
    runs-on: ubuntu-latest
    needs: [build_single_images]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Docker
        run: |
          echo '{"experimental": true, "features": { "containerd-snapshotter": true }}' | sudo tee -a /etc/docker/daemon.json
          sudo systemctl restart docker
          docker run --privileged --rm tonistiigi/binfmt --install all

      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: ${{ inputs.artifact_directory }}/cache
          pattern: cache-${{ inputs.artifact_name }}-*
          merge-multiple: false

      - name: Build & Save Image
        run: |
          ${{ inputs.cli_commands }}
          docker build \
            --platform linux/amd64,linux/arm64/v8 \
            --tag ${{ inputs.image_name }}:${{ inputs.image_tag }} \
            --cache-from type=local,src=${{ inputs.artifact_directory }}/cache/cache-${{ inputs.artifact_name }}-AMD64 \
            --cache-from type=local,src=${{ inputs.artifact_directory }}/cache/cache-${{ inputs.artifact_name }}-ARM64 \
            ${{ inputs.build_options }} \
            ${{ inputs.build_path }}
          docker save -o ${{ inputs.artifact_directory }}/${{ inputs.artifact_name }}.tar ${{ inputs.image_name }}:${{ inputs.image_tag }}

      - name: Archive image
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ inputs.artifact_name }}
          path: |
            ${{ inputs.artifact_directory }}/${{ inputs.artifact_name }}.tar
